!!
!! pin
!!
type randomRayPhysicsPackage;  // try tro specify the initial source / play with entropy 

pop      2000; //1750
active   500; // 500 //1700 
inactive 100; // 500
dead     20;  
termination 220;  
plot 0;
cache 1;
printFlux 1;
XSdata   mg; 
dataType mg;
outputFormat asciiJSON;
// outputFile SimplePin_RR_output;
outputFile SimplePin_RR_output;

seed  -29501819;
rho 1; //stabilisation of negative cross sections for deterministic methods


// fissionRate needs a fission map

fissionMap {
   type radialMap; axis z; origin (0.0 0.0 0.0); grid unstruct; bins (0.2375    0.335875721    0.411362067  0.475  0.573775871   0.657884868      0.732397604);

  // type multiMap;
  // maps(xax yax);

  // xax
  // {
  //   type spaceMap;
  //   axis x;
  //   grid lin;
  //   min - 0.63;
  //   max 0.63;
  //   N 10;}
  //           yax { type spaceMap; axis y; grid lin; min -0.63; max 0.63; N 10;}
}
fluxMap {
  // type radialMap; axis z; origin (0.0 0.0 0.0); grid unstruct; bins (0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.475 0.5 0.55 0.6 0.63); 
  type multiMap;

            maps (xax yax);
            xax { type spaceMap; axis x; grid lin; min -0.63; max 0.63; N 100;}
            yax { type spaceMap; axis y; grid lin; min -0.63; max 0.63; N 100;}
}
             

geometry {
  type geometryStd;
  // 0 - vacuum 1 - reflective 2 - periodic
  boundary (1 1 1 1 1 1 );


  graph {type extended;} 

surfaces {
    boundingSurface { id 80; type zSquareCylinder; origin (0 0 0) ; halfwidth (0.63 0.63 2);} // halfwidth (0.63 0.63 2)

  }


  cells { 

  }


universes {

  root {id 999; type rootUniverse; border 80; fill u<1000>;}
  // pin {id 1000; type pinUniverse; radii ( 0.475 0.0 ); fills (fuel water);}
  // pin {id 1000; type pinUniverse; radii (0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.475 0.5 0.55 0.6 0.0 ); fills (fuel fuel fuel fuel fuel fuel fuel fuel fuel fuel water water water water);}

  // pin {id 1000; type pinUniverse;
  //   radii (0.15 0.3 0.4 0.475 0.55 0.6 0.0);
  //   fills (fuel fuel fuel fuel water water water);
  // }

  pin
  {
    id 1000;
    type azimPinUniverse;
    naz 8;
    
    radii (0.19609 0.277313137 0.339637843 0.39218 0.40005 0.45720 0.562826687 0.651548862 0.729560114 0.0);
    fills (fuel1 fuel2 fuel3 fuel4 void clad water1 water2  water3 water4 ); 

    // radii (0.39218  0.40005 0.45720 0.0  );
    // fills (fuel void clad water);
  }
  }
}


viz {
  myVTK {
    type vtk;
    what uniqueID; 
    corner (-0.63 -0.63 0);
    width (1.26 1.26 0);
    vox (500 500 1);
  }
  bmpID { 
    type bmp; 
    output SimplePin_id; 
    what uniqueID; 
    centre (0.0 0.0 0); 
    axis z; 
    res (2000 2000);  }
    bmpMat { 
    type bmp; 
    output SimpleSPin_mat; 
    what material; 
    centre (0.0 0.0 0); 
    axis z; 
    res (500 500);  }
} 


nuclearData {
  handles {
    mg {type baseMgNeutronDatabase; PN P0;}
  }

// materials {


// //mix of uranium and water
// fuel { 
//       temp 0;
//       composition {  
        
//         }
//       xsFile materialsInputs/fuel ;

//       }

// water { 
//       temp 0;
//       composition {}

//       xsFile materialsInputs/water ;
 

      
//   }

//   clad
//   {
//     temp 0;
//     composition
//     {
//     }
//     xsFile materialsInputs/clad;
//   }
// }

  materials
  {

    // mix of uranium and water
    fuel1
    {
      temp 0;
      composition {}
      xsFile materialsInputs/fuel1;
    }

     fuel2
    {
      temp 0;
      composition {}
      xsFile materialsInputs/fuel2;
    }

     fuel3
    {
      temp 0;
      composition {}
      xsFile materialsInputs/fuel3;
    }

     fuel4
    {
      temp 0;
      composition {}
      xsFile materialsInputs/fuel4;
    }


    water1
    {
      temp 0;
      composition {}

      xsFile materialsInputs/water1;
    }

    water2
    {
      temp 0;
      composition {}

      xsFile materialsInputs/water2;
    }

    water3
    {
      temp 0;
      composition {}

      xsFile materialsInputs/water3;
    }

    water4
    {
      temp 0;
      composition {}

      xsFile materialsInputs/water4;
    }


    clad
    {
      temp 0;
      composition
      {
      }
      xsFile materialsInputs/clad;
    }
  }
}

