
type eigenPhysicsPackage; // try tro specifgy the initial source / play with entropy 

pop      10000; // could increase to 500k
active   2000; //2500;  // was 200... try 2000, to reduce variance in k
inactive 100; 
XSdata ce; 
dataType ce;

seed -29501819;

// Specify output format default asciiMATLAB
outputFormat asciiJSON;
outputFile SimpleSlabVacuum_MC_output;

collisionOperator { neutronCE {type neutronCEstd;} }

transportOperator {
                   type transportOperatorHT;/// HT hybrid, ST surface tracking, DT delta tracking
                   }

inactiveTally {
  shannon {
	    type shannonEntropyClerk;
            map {type multiMap;
            maps (xax yax);
            xax { type spaceMap; grid lin; min -20; max 20; N 80; axis x;}
            yax { type spaceMap; grid lin; min -20; max 20; N 80; axis y;} // cover the fissile core
            // zax { type spaceMap; grid lin; min -183; max 183; N 20; axis z;}
                }
           cycles 800; // can choose some large number which islarger than total number of cycles
          }
}

activeTally {

  // macroResponse: used to store macroscopic reaction rates. MT: MT number of the desired reaction. The options are: -1 total, -2 capture, -6 fission, -7 nu*fission, -21 absorption
  
 pinFiss  { type collisionClerk; response (flux fission); 
               flux {type fluxResponse;}
               fission { type macroResponse; MT -6;} // -6 is fission rate
                  map {type multiMap; maps (xax yax);
                    xax {type spaceMap;  axis x;  grid lin; N 40; min -20; max 20; }
                     yax {type spaceMap;  axis y;  grid lin; N 40; min -20; max 20; } 


                  }
                } 

  scatteringMatrices { type mgXsClerk;
    // energyMap {type energyMap; grid log; min 1e-11; max 2e1; N 69;} // in MeV
    // energyMap {type energyMap; grid log; min 1e-11; max 2e1; N 6;} // in MeV
    // energyMap {type energyMap; grid log; min 1e-11; max 2e1; N 1;} // in MeV
    energyMap {type energyMap; grid log; min 1e-11; max 2e1; N 172;} // in MeV

    // spaceMap { type materialMap; materials (UOX_H2O_inner UOX_H2O_outer ); }


    //       multiMap {type multiMap; maps (xax yax energyMap);
    // energyMap {type energyMap; grid log; min 1e-11; max 2e1; N 23;} // in MeV
    // xax {type spaceMap;  axis x;  grid lin; N 16; min -20; max 20; } //N= 289 , min -10.81; max 10.81
    // yax {type spaceMap;  axis y;  grid lin; N 16; min -20; max 20; } //N= 289
    // }
    PN 1;


  }

}

geometry {
  type geometryStd;
  // 0 - vacuum 1 - reflective 2 - periodic
  boundary (0 0 0 0 1 1 );
  // boundary (1 1 1 1 1 1);
  graph {type shrunk;} 

surfaces {
    boundingSurface { id 80; type zSquareCylinder; origin (0 0 0) ; halfwidth (20 20 20);} // halfwidth (20 20 0)
    // innerSurface {id 81; type zSquareCylinder;  origin (0 0 0) ; halfwidth (15 15 20); }

  }


  cells { 
    
    // inner {id 90; type simpleCell; surfaces (-81); filltype mat; material UOX_H2O_inner;}

    // outer {id 91; type simpleCell; surfaces (81); filltype mat; material UOX_H2O_outer;}

  }



  


universes {

  root {id 999; type rootUniverse; border 80; fill UOX_H2O;}

  // root {id 999; type rootUniverse; border 80; fill u<998>;}

  // cellUni {id 998; type cellUniverse; cells (90 91);}
       
  }

}

viz {

  bmpz {
    type bmp;
    output radial;
    what material;
    centre (0.0 0.0 0.0);
    axis z;
    res (1000 1000);
  }

}


nuclearData {
  handles {
    ce {type aceNeutronDatabase; aceLibrary $SCONE_ACE;}
  }

materials {

 


//mix of uranium and water
UOX_H2O { 
      temp 0;
      composition {
      92235.06 5.2043958E-04; // density = 10.97 g/cm^3 for UO2   https://www.nuclear-power.com/nuclear-power-plant/nuclear-fuel/fuel-assembly/fuel-pellets/uranium-dioxide-uo2/
      92238.06 2.3956569E-02;  
      8016.06	2.34E-02;
      1001.06	4.68E-02;
      }
      moder { 1001.06  hh2o.06 ; }
      
}







}
}
